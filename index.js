#!/usr/bin/env node
const {exec} = require('child_process'),
    chalk = require('chalk'),
    clipboardy = require('clipboardy'),
    meow = require('meow'),
    r = /https?:\/\/[^/]+/
let url = ''
const inputMsg = meow(`
	Usage
	  $ gfwadd <input>

	Options
	  --all, -a  match all domain
	  --reload, -r auto reload current chrome tab

	Examples
	  $ gfwadd http://janeluck.github.io -a
	  üåà push *.github.io to rules
	  $ gfwadd http://janeluck.github.io 
	    push  http://janeluck.github.io to rules
	  $ gfwadd
	    push clipboard url to rules
`, {
    flags: {
        all: {
            type: 'boolean',
            alias: 'a'
        },
        reload: {
            type: 'boolean',
            alias: 'r'
        }
    }
})

const argUrl = inputMsg.input[0]

// ÂÖà‰ªéÂëΩ‰ª§Ë°åÊèêÂèñurl
if (argUrl) {
    url = argUrl.match(r)[0]
} else {
    try {
        // ‰ªéÂâ™Ë¥¥Êùø‰∏≠Ëé∑Âæóurl
        url = clipboardy.readSync().match(r)[0]
    } catch (e) {
        console.error(`${chalk.red('‚úò')}  Error: Ââ™Ë¥¥Êùø‰∏≠Ê≤°ÊúâÂêàÊ≥ïÁöÑurl`)
        return
    }
}


if (inputMsg.flags.a) {
    url = url.replace(/https?:\/\/[^\\.]+/, '*')
}


// Â§ÑÁêÜÊàêsedÂëΩ‰ª§ÊâÄÈúÄË¶ÅÁöÑÊ†ºÂºè
const sedUrl = '\\"' + url + '\\"'
// Âêëgfwlist.jsÁöÑrulesÊ∑ªÂä†ÁΩëÂùÄ
exec(`sed -i "" "6 a\\ \n  ${sedUrl},\n"       ~/.ShadowsocksX/gfwlist.js`, (error, stdout, stderr) => {
    if (error) {
        console.error(`${chalk.red('‚úò')}  Error: ${error}`)
        return;
    } else {
        console.log(`${chalk.green('‚úî')}  Success:  ${url}Ê∑ªÂä†ÊàêÂäü`)
    }
    // ÈáçÂêØShadowsocksX
    exec(`osascript -e 'quit app "ShadowsocksX"'  && sleep 1 &&  open -a 'ShadowsocksX'`, (error, stdout, stderr) => {
        console.log(stdout)
        if (error) {
            console.error(`${chalk.red('‚úò')}  Error: ${error}`)
            return
        } else {
            console.log(`${chalk.green('‚úî')}  ShadowsocksXÂ∑≤ÁªèÈáçÂêØ`)


            // Ëá™Âä®Âà∑Êñ∞ÊµèËßàÂô®È°µÈù¢
            if (inputMsg.flags.r) {
                exec(`osascript -e 'tell application "Google Chrome" to tell the active tab of its first window to reload'`, (error, stdout, stderr) => {

                    if (error) {
                        console.error(`${chalk.red('‚úò')}  Error: ${error}`)
                        return
                    } else {
                        console.log(`${chalk.green('‚úî')}  ChromeÈ°µÈù¢Â∑≤ÁªèÂà∑Êñ∞`)
                    }
                })
            }


        }
    })
})
